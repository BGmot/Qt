#
# Base qmake configuration for QCC on *nix-systems
#

include(qcc-base.conf)

QMAKE_LFLAGS_SHLIB  += -shared
QMAKE_LFLAGS_PLUGIN += $$QMAKE_LFLAGS_SHLIB
QMAKE_LFLAGS_SONAME += -Wl,-soname,
QMAKE_LFLAGS_THREAD +=
QMAKE_LFLAGS_RPATH   = -Wl,-rpath,

# -Bsymbolic-functions (ld) support
QMAKE_LFLAGS_BSYMBOLIC_FUNC = -Wl,-Bsymbolic-functions
QMAKE_LFLAGS_DYNAMIC_LIST   = -Wl,--dynamic-list,

# Generic options for all BlackBerry/QNX qcc mkspecs
QMAKE_CFLAGS_THREAD     = -D_REENTRANT
QMAKE_CXXFLAGS_THREAD   = $$QMAKE_CFLAGS_THREAD
QMAKE_COMPILER_DEFINES  += __QNXNTO__

QMAKE_LIBS              = -lm
QMAKE_LIBS_NETWORK      = -lsocket

# OpenGL libraries have a dependency on libEGL
QMAKE_LIBS_OPENGL_ES1   = -lGLES_CM -lEGL
QMAKE_LIBS_OPENGL_ES2   = -lGLESv2 -lEGL

QNX_STAGE_TEST = $$[QNX_STAGE]
!isEmpty( QNX_STAGE_TEST ) {
    QMAKE_INCDIR        = $$[QNX_STAGE]/usr/include $$[QNX_STAGE]/usr/include/freetype2
    QMAKE_LIBDIR        = $$[QNX_STAGE]/$${QNX_CPUDIR}/lib $$[QNX_STAGE]/$${QNX_CPUDIR}/usr/lib
    QMAKE_LFLAGS        = -Wl,-rpath-link,$$[QNX_STAGE]/$${QNX_CPUDIR}/lib -Wl,-rpath-link,$$[QNX_STAGE]/$${QNX_CPUDIR}/usr/lib
}

QNX_TARGET_TEST = $$[QNX_TARGET]
isEmpty( QNX_TARGET_TEST ) {
    error(QNX_TARGET qmake variable not set)
}
QMAKE_INCDIR            += $$[QNX_TARGET]/usr/include $$[QNX_TARGET]/usr/include/freetype2
QMAKE_LIBDIR            += $$[QNX_TARGET]/$${QNX_CPUDIR}/lib $$[QNX_TARGET]/$${QNX_CPUDIR}/usr/lib
QMAKE_LFLAGS            += -Wl,-rpath-link,$$[QNX_TARGET]/$${QNX_CPUDIR}/lib -Wl,-rpath-link,$$[QNX_TARGET]/$${QNX_CPUDIR}/usr/lib

QMAKE_INCDIR_QT         = $$[QT_INSTALL_HEADERS]
QMAKE_LIBDIR_QT         = $$[QT_INSTALL_LIBS]
QMAKE_MOC               = $$[QT_INSTALL_BINS]/moc
QMAKE_UIC               = $$[QT_INSTALL_BINS]/uic
QMAKE_RCC               = $$[QT_INSTALL_BINS]/rcc

QMAKE_CXX               = $$QMAKE_CC -lang-c++

QMAKE_LINK_C            = $$QMAKE_CC
QMAKE_LINK_C_SHLIB      = $$QMAKE_CC

QMAKE_LINK              = $$QMAKE_CXX
QMAKE_LINK_SHLIB        = $$QMAKE_CXX

QMAKE_TAR               = tar -cf
QMAKE_GZIP              = gzip -9f

QMAKE_COPY              = cp -f
QMAKE_COPY_FILE         = $(COPY)
QMAKE_COPY_DIR          = $(COPY) -r
QMAKE_MOVE              = mv -f
QMAKE_DEL_FILE          = rm -f
QMAKE_DEL_DIR           = rmdir
QMAKE_CHK_DIR_EXISTS    = test -d
QMAKE_MKDIR             = mkdir -p
QMAKE_STRIPFLAGS_LIB    += --strip-unneeded
QMAKE_CHK_DIR_EXISTS    = test -d
QMAKE_MKDIR             = mkdir -p
